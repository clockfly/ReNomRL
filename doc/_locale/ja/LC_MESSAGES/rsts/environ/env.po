# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, grid
# This file is distributed under the same license as the ReNomRL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: ReNomRL 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-03 16:39+0900\n"
"PO-Revision-Date: 2018-11-03 16:39+0900\n"
"Last-Translator: \n"
"Language: ja\n"
"Language-Team: \n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"
"X-Generator: Poedit 2.1.1\n"

#: ../../rsts/environ/renom_rl.environ.env.rst:2
msgid "renom_rl.environ.env"
msgstr ""

#: of renom_rl.environ.env.BaseEnv:1
msgid "Bases: :class:`object`"
msgstr ""

#: of renom_rl.environ.env.BaseEnv:1
msgid ""
"Base class of environment. The methods ``step``, ``reset`` and ``sample`` "
"must be overridden. Users can override ``start``, ``epoch``, "
"``epoch_step``, ``close``, ``test_start``, ``test_epoch_step``, "
"``test_close``. If  ``test_start``, ``test_epoch_step``, ``test_close`` are "
"not defined, then they will use the same function as ``start``, "
"``epoch_step``, ``close``. Note that these functions are only used to "
"execute, thus arguments can not be implemented (excluding ``reset``)."
msgstr ""
"環境クラスの基底クラス. ``step``, ``reset`` , ``sample`` 関数は上書きする必"
"要がある. ``start``, ``epoch``, ``epoch_step``, ``close``, ``test_start``, "
"``test_epoch_step``, ``test_close`` 関数も上書き可能. もし, "
"``test_start``, ``test_epoch_step``, ``test_close`` が定義されていない場合"
"は, ``start``, ``epoch_step``, ``close`` 関数と同等になる. これらの関数は実"
"行するための関数であるので, 引数は指定できない ( ``reset`` を除く)."

#: of renom_rl.environ.env.BaseEnv:8
msgid "Example"
msgstr ""

#: of renom_rl.environ.env.BaseEnv.step:1
msgid ""
"This method must be overridden. This method must accept single action and "
"return next state, reward and terminal. When overriding this method, don't "
"forget to return above data."
msgstr ""
"行動aを受け取り, (次状態, 報酬, 終了フラグ)を返す様実装されている必要があり"
"ます."

#: of renom_rl.environ.env.BaseEnv.step:6
msgid ""
"**|** -- Environment's next state. | (float): Reward gotten from the "
"transition. | (bool): Terminal flag. |"
msgstr ""
"**|** — 環境の次状態. | (float): 環境の状態遷移において得られた報酬. | "
"(bool): episodeの終了を表すフラグ. |"

#: of renom_rl.environ.env.BaseEnv.sample:1
msgid "This method must be overridden. This method must return random action."
msgstr ""
"ランダムな行動を返します. このメソッドは, 必ずオーバライドされる必要がありま"
"す."

#: of renom_rl.environ.env.BaseEnv.sample:4
msgid "Sampled action. Its shape must be same as BaseEnv.action_shape."
msgstr "ランダムに選択された行動です."

#: of renom_rl.environ.env.BaseEnv.reset:1
msgid "This method must be overridden."
msgstr "このメソッドは, 必ずオーバライドされる必要があります."

#: of renom_rl.environ.env.BaseEnv.reset:3
msgid "Initial state. Its shape must be same as BaseEnv.state_shape."
msgstr "環境の初期状態."

#: of renom_rl.environ.env.BaseEnv.terminate:1
msgid ""
"This is optional. In some cases, users want to terminate learning for "
"certain conditions. By overriding this function, users will able to "
"terminate the learning process once a certain condition is met. The return "
"value is False by default."
msgstr ""
"この関数は使用可能. 学習を中断するための関数です. この関数をオーバライドする"
"ことで, 特定条件のもとで, 学習を中断することができます. "

#: of renom_rl.environ.env.BaseEnv.start:1
msgid ""
"This is optional. This method will be called when fit function starts. This "
"will execute after ``reset``."
msgstr ""
"この関数は使用可能. 学習開始時に実行します. ``reset`` 後, 実行します. "

#: of renom_rl.environ.env.BaseEnv.epoch:1
msgid ""
"This is optional. This method will be called when epoch is updated. This "
"will execute after ``reset``."
msgstr ""
"この関数は使用可能. エポック開始時に実行します. ``reset`` 後, 実行します. "

#: of renom_rl.environ.env.BaseEnv.epoch_step:1
#: renom_rl.environ.env.BaseEnv.test_epoch_step:1
msgid ""
"This is optional. This method will be called every step. This will execute "
"after ``step``."
msgstr ""
"この関数は使用可能. テストステップごとに実行します. ``step`` 後, 実行しま"
"す. "

#: of renom_rl.environ.env.BaseEnv.close:1
msgid "This is optional. This method will be called when fit is closed."
msgstr "この関数は使用可能. fit 終了時に実行します. "

#: of renom_rl.environ.env.BaseEnv.test_start:1
msgid ""
"This is optional. This method will be called when test is starting. This "
"will execute after ``reset``."
msgstr ""
"この関数は使用可能. テスト開始時に実行します. ``reset`` 後, 実行します. "

#: of renom_rl.environ.env.BaseEnv.test_close:1
msgid "This is optional. This method will be called when test is done."
msgstr "この関数は使用可能. テスト終了時に実行します. "

#~ msgid ""
#~ "Base class of environment. The methods `step`, `reset` and `sample` must "
#~ "be overridden."
#~ msgstr ""
#~ "ReNomRLにて, 強化学習エージェントを訓練するための環境を定義するためのベー"
#~ "スクラス. ``step``, ``sample``, ``reset`` 関数をオーバライドする必要があ"
#~ "る."

#~ msgid ""
#~ "Rendering method. If you want to render environment states, please "
#~ "override this method."
#~ msgstr ""
#~ "描画用抽象メソッド. 描画処理を実装したい場合, このメソッドを実装してくだ"
#~ "さい."

#~ msgid ""
#~ "This is optional. This method will be called when epoch is reset. This "
#~ "will execute after ``reset``."
#~ msgstr ""
#~ "この関数は使用可能. テスト時におけるステップごとに実行します. ``step`` "
#~ "後, 実行します. "

#~ msgid ""
#~ "This is optional. This method will be called when epoch_step is reset. "
#~ "This will execute after ``step``."
#~ msgstr ""
#~ "この関数は使用可能. ステップごとに実行します. ``step`` 後, 実行します. "
