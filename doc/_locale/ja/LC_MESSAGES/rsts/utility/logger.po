# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, grid
# This file is distributed under the same license as the ReNomRL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: ReNomRL 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-30 17:56+0900\n"
"PO-Revision-Date: 2019-01-30 18:44+0900\n"
"Last-Translator: \n"
"Language: ja\n"
"Language-Team: \n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"
"X-Generator: Poedit 2.2.1\n"

#: ../../rsts/utility/logger.rst:2
msgid "renom_rl.utility.logger : Logger Series"
msgstr ""

#: ../../rsts/utility/logger.rst:4
msgid "This section shows description for logger modules."
msgstr "ここではロガーモジュールについて説明します。"

#: ../../rsts/utility/logger.rst:6
msgid "**About Iteration**"
msgstr "**Iteration について**"

#: ../../rsts/utility/logger.rst:8
msgid ""
"For modules using a single agent and non advanced steps, 1 iteration is "
"equivalent to 1 step."
msgstr ""
"シングルエージェントでかつアドバンスステップをしないモジュールの場合、 1 "
"iteration と１step は等価です。"

#: ../../rsts/utility/logger.rst:10
msgid ""
"For modules using advantage steps, 1 iteration is equivalent to the advantage "
"step."
msgstr ""
"advantage step を使用しているモジュールの場合、 1 iteration は advantage step"
"分と等価です。"

#: ../../rsts/utility/logger.rst:11
msgid "For modules using multiple agents, 1 agent is logged."
msgstr ""
"複数のエージェントを使用しているモジュールの場合、１エージェント分のみロギング"
"します。"

#: ../../rsts/utility/logger.rst:13
msgid ""
"View `Logger Key Table <./logger_key.html>`_ for variables available to log."
msgstr ""
"ロギングできるキー値については、 `Logger Key Table <./logger_key.html>`_ を参"
"照してください。"

#: of renom_rl.utility.logger.AVAILABLE_KEYS:1
msgid "**AVAIABLE_KEYS**"
msgstr ""

#: of renom_rl.utility.logger.AVAILABLE_KEYS:3
msgid "Allows users to view keys that are avaiable for logging."
msgstr "ロギングする際に設定可能な変数を表示します。"

#: of renom_rl.utility.logger.AVAILABLE_KEYS:7
msgid "dqn  : dqn epoch / epoch_logger keys"
msgstr "dqn  : dqn epoch / epoch_logger キー一覧"

#: of renom_rl.utility.logger.AVAILABLE_KEYS:8
msgid "ddqn : ddqn epoch / epoch_logger keys"
msgstr "ddqn : ddqn epoch / epoch_logger キー一覧"

#: of renom_rl.utility.logger.AVAILABLE_KEYS:9
msgid "ddpg : ddpg epoch / epoch_logger keys"
msgstr "ddpg : ddpg epoch / epoch_logger キー一覧"

#: of renom_rl.utility.logger.AVAILABLE_KEYS:10
msgid "a2c  : a2c epoch / epoch_logger keys"
msgstr "a2c  : a2c epoch / epoch_logger キー一覧"

#: of renom_rl.utility.logger.AVAILABLE_KEYS:11
msgid "doc  : AVAIABLE_KEYS document"
msgstr "doc  : AVAIABLE_KEYSのドキュメント"

#: of renom_rl.utility.logger.AVAILABLE_KEYS:14
#: renom_rl.utility.logger.Logger:30 renom_rl.utility.logger.Logger.from_csv:8
#: renom_rl.utility.logger.Logger.graph:28
#: renom_rl.utility.logger.Logger.graph_custom:16
#: renom_rl.utility.logger.Logger.result:12
#: renom_rl.utility.logger.Logger.to_csv:12
#: renom_rl.utility.logger.SimpleLogger:28
msgid "Examples"
msgstr ""

#: of renom_rl.utility.logger.Logger:1
msgid "**Logger Module**"
msgstr ""

#: of renom_rl.utility.logger.Logger:3
msgid "This class logs various data of each module."
msgstr "このクラスは様々なアルゴリズムをロギングするために使用するクラスです。"

#: of renom_rl.utility.logger.Logger:5
msgid ""
"By setting ``log_key`` , ``log_key_epoch`` , this class will record data "
"based on log_key for every iteration. ``log_key`` , ``log_key_epoch`` "
"argument must be a list of strings which exist in the algorithm."
msgstr ""
"``log_key`` , ``log_key_epoch`` にキー値を含むlist型変数を入力することで、各"
"iterationごとにロギングします。 ``log_key`` , ``log_key_epoch`` はstring型要素"
"を含むlist型変数であり、各アルゴリズムに存在するキーを指定することしかできませ"
"ん。"

#: of renom_rl.utility.logger.Logger:8
msgid ""
"``logger(**log)`` function returns at every iter. **(Overriding Required.)** "
"``logger_epoch(**log)`` function returns at each end of epoch. "
"**(Unnecessary.)**"
msgstr ""
"``logger(**log)`` 関数は各iterationにつき、ロギングします。 **(オーバーライド"
"必須 )** ``logger_epoch(**log)`` 関数は各epochの終了ごとにロギングします。"
"**(任意)**"

#: of renom_rl.utility.logger.Logger:11
msgid "Users must also call super class ``super().__init__`` when initializing."
msgstr "初期化する際は必ず ``super().__init__`` を実行してください。"

#: of renom_rl.utility.logger.Logger:14 renom_rl.utility.logger.SimpleLogger:9
msgid "Logging values."
msgstr "各iterationごとに記録するキー。"

#: of renom_rl.utility.logger.Logger:16 renom_rl.utility.logger.SimpleLogger:11
msgid "Logging values at end of epoch."
msgstr "各epochごとに記録するキー。"

#: of renom_rl.utility.logger.Logger:18 renom_rl.utility.logger.SimpleLogger:17
msgid "Keeps data for graph and csv. Default is True."
msgstr ""
"True の場合、各itertionごとに指定したキー値の変数を記録します。デフォルトは"
"Trueです。"

#: of renom_rl.utility.logger.Logger:20 renom_rl.utility.logger.SimpleLogger:19
msgid "Keeps data when ``record`` is True and episode changes. Default is True."
msgstr ""
"True であり、かつ ``record`` が Trueの場合、各エピソード終了時にて記録します。"
"デフォルトはTrueです。"

#: of renom_rl.utility.logger.Logger:22 renom_rl.utility.logger.SimpleLogger:21
msgid "Shows bar. Default is True."
msgstr "True の場合、進行バーを表示します。デフォルトはTrueです。"

#: of renom_rl.utility.logger.Logger:24 renom_rl.utility.logger.SimpleLogger:23
msgid "Disables tqdm. Default is False."
msgstr "True の場合、tqdm は表示しません。デフォルトはFalseです。"

#: of renom_rl.utility.logger.Logger.logger:1
msgid ""
"This function will be called for every iteration. **Override this function "
"when creating custom logger.**"
msgstr "各iterationごとに実行する関数です。"

#: of renom_rl.utility.logger.Logger.logger_epoch:1
msgid ""
"This function will be called when 1 epoch is done. **Override this function "
"when creating custom logger.**"
msgstr "各epochごとに実行する関数です。"

#: of renom_rl.utility.logger.Logger.result:1
msgid ""
"Returns dictionary of logging data. If argument is blank, then all output "
"will be shown."
msgstr ""
"log_keyで指定した変数をdictionaryとして出力する関数です。引数がなければ、全て"
"表示します。"

#: of renom_rl.utility.logger.Logger.result:3
msgid "Strings of arguments."
msgstr "表示したいキー。入力変数はstring。"

#: of renom_rl.utility.logger.Logger.result:7
msgid "Dictionary of logging data."
msgstr "キーのロギング結果"

#: of renom_rl.utility.logger.Logger.result_epoch:1
msgid ""
"Returns dictionary of result that were specified as log_key_epoch. If "
"argument is blank, then all output will be shown."
msgstr ""
"log_key_epochで指定した変数をdictionaryとして出力する関数です。引数がなけれ"
"ば、全て表示します。"

#: of renom_rl.utility.logger.Logger.graph:1
msgid ""
"Shows plot from recorded data. Keys must be from log_key. if ``x_key`` is "
"None, ``y_key`` will be plot based on its length. Note that this function is "
"focused on quick view so if detailed view is required, save data as csv."
"(refer ``to_csv`` function)"
msgstr ""
"log_keyで指定した値をグラフ化する関数です。 key値は必ずlog_keyに存在する必要が"
"あります。もし ``x_key`` が ない場合、 ``y_key`` の長さに応じて設定します。こ"
"の関数はあくまで経過状況を速やかに確認するための関数であるため、より詳細な表示"
"が必要な場合はcsv形式で保存してください。( ``to_csv`` 関数を参照)"

#: of renom_rl.utility.logger.Logger.graph:5
msgid "Key for Y (vertical) axis. 2-D data is allowed."
msgstr "Y軸に表示したいキー。2-D 配列可能。"

#: of renom_rl.utility.logger.Logger.graph:7
msgid "Key for X (horizontal) axis. This must be 1-D data. Default is None."
msgstr "X軸に表示したいキー。1-D のみ。デフォルトはNoneです。"

#: of renom_rl.utility.logger.Logger.graph:9
msgid "[min,max] range for X axis. Default is min,max of x_key data."
msgstr "X軸[min,max]における表示範囲。"

#: of renom_rl.utility.logger.Logger.graph:11
msgid "[min,max] range for Y axis. Default is min,max of y_key data."
msgstr "Y軸[min,max]における表示範囲。"

#: of renom_rl.utility.logger.Logger.graph:13
#: renom_rl.utility.logger.Logger.graph:15
msgid "Interval of ticks for X axis. Default is None (ticks: auto)."
msgstr "X軸間隔。デフォルトは None(自動)です。"

#: of renom_rl.utility.logger.Logger.graph:17
msgid "When (a,b) is input, plot increase to a*x_axis, b*y_axis."
msgstr "プロットサイズの倍数。(a,b)が指定された場合、その倍数分表示します。"

#: of renom_rl.utility.logger.Logger.graph:19
msgid "Digital Pixel Image. Default is 100."
msgstr "Digital Pixel Image。 デフォルトは100です。"

#: of renom_rl.utility.logger.Logger.graph:21
msgid ""
"Creates average plot in [i - min, i + max] "
"range                                     (i being plotted point), when [min,"
"max] is set. If int                                     type is set, it "
"becomes [average_length,average_length].                                     "
"Default is 0."
msgstr ""
"[min,max]入力時に[i - min, i + max] の平均を算出します。iはプロットする点(x値)"
"を示します。Int が指定された場合は、min、maxを同一の値にし、それぞれの値に入力"
"した状態で[i - min, i + max]範囲で平均算出します。デフォルトは０です。"

#: of renom_rl.utility.logger.Logger.graph:23
msgid "Shows grid based on ticks. Default is True."
msgstr "グリッドラインの表示。デフォルトはTrueです。"

#: of renom_rl.utility.logger.Logger.graph_epoch:1
msgid ""
"Shows plot from recorded data at every epoch. View the function above for "
"details."
msgstr ""
"log_key_epochで指定した値をグラフ化する関数です。上記と似ているため、詳細は上"
"記の関数を参照してください。"

#: of renom_rl.utility.logger.Logger.graph_custom:1
msgid ""
"This function allows users to quickly create graph when custom creating own "
"data."
msgstr ""
"グラフを簡単に表示するための関数です。記録したデータ以外のデータを活用すること"
"も可能です。"

#: of renom_rl.utility.logger.Logger.graph_custom:3
msgid "refer ``graph`` for other arguments."
msgstr "引数については ``graph`` 関数を参照してください。"

#: of renom_rl.utility.logger.Logger.graph_custom:5
msgid "Y (vertical) axis data. 2-D data is allowed."
msgstr "Y軸データ。2-D 配列可能。"

#: of renom_rl.utility.logger.Logger.graph_custom:7
msgid "X (horizontal) axis data. This must be 1-D data. Default is None."
msgstr "X軸データ。1-D 配列可能のみ。デフォルトはNoneです。"

#: of renom_rl.utility.logger.Logger.graph_custom:9
msgid "Y (vertical) axis label."
msgstr "Y軸ラベル。"

#: of renom_rl.utility.logger.Logger.graph_custom:11
msgid "X (vertical) axis label."
msgstr "X軸ラベル。"

#: of renom_rl.utility.logger.Logger.to_csv:1
msgid ""
"Stores csv file based on filename. Epoch data are stored as filename +\"_e.csv"
"\""
msgstr ""
"csv として格納する関数です。各epochごとに記録したデータについては\"_e.csv\"で"
"格納します。"

#: of renom_rl.utility.logger.Logger.from_csv:3
#: renom_rl.utility.logger.Logger.to_csv:3
msgid "Filename of the string."
msgstr "ファイル名。"

#: of renom_rl.utility.logger.Logger.to_csv:5
msgid "Overwrites if exist. Appends number if exist. Default is False."
msgstr "True の場合、上書き保存をします。デフォルトはFalseです。"

#: of renom_rl.utility.logger.Logger.to_csv:7
msgid "Stores epoch data if True. Default is True."
msgstr ""
"True の場合、log_key_epoch にて指定したキー一覧のデータも保存します。デフォル"
"トはTrueです。"

#: of renom_rl.utility.logger.Logger.from_csv:1
msgid ""
"Loads csv file based on filename. If file ends with '_e',csv file will be "
"loaded as epoch data."
msgstr ""
"csvデータを読込む関数です。もし、'_e.csv'で終了している場合は、csvファイルを"
"epochごとに記録するデータとして認識します。"

#: of renom_rl.utility.logger.SimpleLogger:1
msgid "**Simple Logger Module**"
msgstr ""

#: of renom_rl.utility.logger.SimpleLogger:3
msgid "This class logs various data for each module."
msgstr ""
"このクラスは様々なアルゴリズムにおける変数データをよりシンプルにロギングするた"
"めの関数です。"

#: of renom_rl.utility.logger.SimpleLogger:5
msgid ""
"``log_key`` , ``log_key_epoch`` argument must be a list of strings which "
"exist in the algorithm."
msgstr ""
"``log_key`` , ``log_key_epoch`` はキーを含むlistである必要があり、かつ 各アル"
"ゴリズムに存在する変数である必要があります。"

#: of renom_rl.utility.logger.SimpleLogger:7
msgid "``msg`` is required.　``msg_epoch`` is optional."
msgstr "``msg`` は必須。 ``msg_epoch`` は任意。"

#: of renom_rl.utility.logger.SimpleLogger:13
msgid "Printing message for each iteration. Use curly braces '{}'."
msgstr "各iterationにおける表示メッセージ。 '{}'を使用してください。"

#: of renom_rl.utility.logger.SimpleLogger:15
msgid "Printing message for each epoch. Use curly braces '{}'."
msgstr "各epoch終了時に表示するメッセージ。 '{}'を使用してください。"
