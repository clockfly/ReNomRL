# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, grid
# This file is distributed under the same license as the ReNomRL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ReNomRL 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-02 11:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../rsts/discrete/renom_rl.discrete.dqn.rst:2
msgid "renom_rl.discrete.dqn"
msgstr ""

#~ msgid "Parameters"
#~ msgstr ""

#~ msgid "Returns"
#~ msgstr "戻り値"

#~ msgid "Return type"
#~ msgstr "戻り値の型"

#~ msgid "Bases: :class:`renom_rl.AgentBase`"
#~ msgstr ""

#~ msgid ""
#~ "DQN class This class provides a "
#~ "reinforcement learning agent including "
#~ "training method."
#~ msgstr ""

#~ msgid "Environment. This must be a child class of BaseEnv."
#~ msgstr ""

#~ msgid "Q-Network."
#~ msgstr ""

#~ msgid ""
#~ "Loss function for train q-network. "
#~ "Default is ClippedMeanSquaredError()."
#~ msgstr ""

#~ msgid "Optimizer for train q-network. Default is Rmsprop(lr=0.00025, g=0.95)."
#~ msgstr ""

#~ msgid "Discount rate."
#~ msgstr ""

#~ msgid "The size of replay buffer."
#~ msgstr ""

#~ msgid "Example"
#~ msgstr ""

#~ msgid "References"
#~ msgstr ""

#~ msgid ""
#~ "Volodymyr Mnih Koray Kavukcuoglu David "
#~ "Silver Alex Graves Ioannis Antonoglou "
#~ "Daan Wierstra Martin Riedmille"
#~ msgstr ""

#~ msgid "**Playing Atari with Deep Reinforcement Learning**"
#~ msgstr ""

#~ msgid "https://arxiv.org/abs/1312.5602"
#~ msgstr ""

#~ msgid ""
#~ "Target q-network is initialized with "
#~ "same neural network weights of "
#~ "q-network."
#~ msgstr ""

#~ msgid "This method returns an action according to the given state."
#~ msgstr ""

#~ msgid "A state of an environment."
#~ msgstr ""

#~ msgid "Action."
#~ msgstr ""

#~ msgid "This function updates target network."
#~ msgstr ""

#~ msgid "This function updates best network in each target update period."
#~ msgstr ""

#~ msgid ""
#~ "This method executes training of a "
#~ "q-network. Training will be done with"
#~ " epsilon-greedy method."
#~ msgstr "Q-Networkの学習を実行する関数. 学習はe-greedy法に基づいて行われる."

#~ msgid "You can define following callback functions."
#~ msgstr ""

#~ msgid "- end_epoch"
#~ msgstr ""

#~ msgid "Args:"
#~ msgstr ""

#~ msgid "epoch (int): The number of current epoch."
#~ msgstr ""

#~ msgid "model (DQN): Object of DQN which is on training."
#~ msgstr ""

#~ msgid ""
#~ "summed_train_reward_in_current_epoch (float): Sum of"
#~ " train rewards earned in current "
#~ "epoch."
#~ msgstr ""

#~ msgid "summed_test_reward_in_current_epoch (float): Sum of test rewards."
#~ msgstr ""

#~ msgid ""
#~ "average_train_loss_in_current_epoch (float): Average "
#~ "train loss in current epoch."
#~ msgstr ""

#~ msgid "Number of epoch for training."
#~ msgstr ""

#~ msgid "Number of step of one epoch."
#~ msgstr ""

#~ msgid "Batch size."
#~ msgstr ""

#~ msgid "Number of random step which will be executed before training."
#~ msgstr ""

#~ msgid "Number of test step."
#~ msgstr ""

#~ msgid "Period of updating target network."
#~ msgstr ""

#~ msgid "For the learning step, training is done at this cycle"
#~ msgstr ""

#~ msgid "Minimum greedy value"
#~ msgstr "Greedy値の最小値."

#~ msgid "Maximum greedy value"
#~ msgstr "Greedy値の最大値."

#~ msgid "Number of step"
#~ msgstr "Greedyを最小から最大まで増加させるまでのstep数"

#~ msgid "Greedy threshold"
#~ msgstr "Test時に使用するGreedy値."

#~ msgid "If True is given, BaseEnv.render() method will be called in test time."
#~ msgstr "Trueが与えられた場合, BaseEnv.render()メソッドが実行される."

#~ msgid "Test the trained agent."
#~ msgstr ""

#~ msgid ""
#~ "Number of steps for test. If None"
#~ " is given, this method tests just "
#~ "1 episode."
#~ msgstr "Test時に実行するstep数. Noneが与えられた場合, 1episode分のTestが実行される."

#~ msgid "Greedy ratio of action."
#~ msgstr ""
#~ "与えられた割合(greedy)に応じて, 学習した価値関数, 方策に基づいて行動する. (1 "
#~ "- greedy)に応じて, 行動をランダムに選択する."

#~ msgid "If True is given, BaseEnv.render() method will be called."
#~ msgstr "Trueが与えられた時, BaseEnv.render()メソッドが呼ばれます."

#~ msgid "Sum of rewards."
#~ msgstr ""

#~ msgid ""
#~ "This method executes training of a "
#~ "q-network. Training will be done with"
#~ " epsilon-greedy method(default)."
#~ msgstr ""

#~ msgid "Exploration filter during learning. Default is `EpsilonGreedyFilter`."
#~ msgstr ""

#~ msgid ""
#~ "Number of steps (not episodes) for "
#~ "test. If None is given, this "
#~ "method tests execute only 1 episode."
#~ msgstr ""

#~ msgid ""
#~ "Exploartion filter during test. Default "
#~ "is `ConstantFilter(threshold=1.0)`."
#~ msgstr ""

